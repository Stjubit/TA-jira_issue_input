---
name: Splunk AppInspect
on: [ push ]
jobs:
  test_package_release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      
      - name: Set app version
        run: |
          echo "$GITHUB_REF"
          if [[ "$GITHUB_REF" == "refs/tags/*" ]]; then
            version=${GITHUB_REF##*/}
          else
            version="0.0.1"
          fi

          echo "APP_VERSION=$version" >> $GITHUB_ENV

      - name: Update version
        run: |
          pip install crudini
          crudini --set ${{ github.event.repository.name }}/default/app.conf launcher version $APP_VERSION
          cat ${{ github.event.repository.name }}/default/app.conf
      
      - name: Package App
        run: |
          find TA-jira_issue_input -type f -exec chmod 644 '{}' \;
          find TA-jira_issue_input -type d -exec chmod 755 '{}' \;
          find TA-jira_issue_input -type f -name "*.sh" -exec chmod +x '{}' \;
          tar -cvzf ${{ github.event.repository.name }}_${{ env.APP_VERSION }}.tgz TA-jira_issue_input
      
      - uses: splunk/appinspect-cli-action@v1
        with:
          app_path: ${{ github.event.repository.name }}_${{ env.APP_VERSION }}.tgz
      
      - uses: actions/upload-artifact@v2
        with:
          name: AppInspect results
          path: appinspect_result.json

      - name: Create Release
        uses: actions/create-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        with:
          release_name: ${{ env.APP_VERSION }}
          tag_name: ${{ github.ref }}
          body: Release ${{ env.APP_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ github.event.repository.name }}_${{ env.APP_VERSION }}.tgz
          asset_name: ${{ github.event.repository.name }}_${{ env.APP_VERSION }}.tgz
          asset_content_type: application/gzip
